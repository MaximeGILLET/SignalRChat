@{
    ViewBag.Title = "Chat";
}

<div id="displayname" hidden>
</div>
<div class="row">
    <div id="roomPanel" class="col-lg-2 nopadding">
        <div id="roomPanelHeader" class="panel-heading text-center chat-panel-heading">
            Participants           
        </div>
        <div id="roomPanelDetail" class="chat">
            <div class="panel room-detail" style="height: 100%;max-height:300px;overflow-y:auto;overflow-x:hidden;">
                <ul id="userList" style="list-style-type:none;padding: 10px;">
                    <li>
                        Curent Room :
                    </li>
                    <li>
                        <hr>
                    </li>

                </ul>
            </div>
        </div>
    </div>
    
    <div id="chatPanel" class="col-lg-7 nopadding">
        <div class="panel panel-chat">
            
            <div class="panel-heading text-center chat-panel-heading">
                <div class="btn btn-nopadding" role="button" onclick="toggleRoom()" style="position:absolute;left: 15px;top: 10px;">
                    <span id="roomIcon" class="glyphicon glyphicon-chevron-left"></span>
                </div>
                <div class="panel-title chat-panel-title">"Room Name" - Chat Box
                </div>  
                <div class="btn btn-nopadding" role="button" onclick="toggleFullScreen()" style="position:absolute;right: 15px;top: 10px;"><span id="screenIcon" class="glyphicon glyphicon-resize-full" ></span>
                </div>                             
            </div>
            <div class="panel-body chat" style="max-height: 100%;">
                <div class="row chat">                   
                    <div class="col-lg-12 chat" style="height:calc(75vh);">
                        <div class="panel chat-box" style="height: 100%;overflow-y:auto">
                            <ul id="discussion" style="list-style-type: none;padding: 10px;">
                                <li>
                                    <i>Welcome In the Chat Room!</i>
                                </li>
                                <li>
                                    <hr style="border-top: 1px solid #000000;">
                                </li>
                            </ul>
                            <div id="messageList" class="container" style="width:100%">
                                @Html.Partial("_MediaObject")
                            </div>
                            
                        </div>
                    </div>
                </div>
                <div class="row chat" style="padding-bottom: 1%;padding-top:1%">
                    <div class="col-lg-12">
                        <div class="input-group">
                            <input id="message" type="text" class="form-control" placeholder="New Message...">
                            <span class="input-group-btn">
                                <button id="sendmessage" class="btn btn-default" type="button">Send</button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="commandPanel" class="col-lg-3 panel-command nopadding">
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-default">
                <div class="panel-heading text-center" role="tab" id="headingTwo">
                    <h3 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo">
                            Commands
                        </a>
                    </h3>
                </div>
                <div id="collapseTwo" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingTwo">
                    <div class="panel-body">
                        <ul>
                            <li>
                                <b>/w &lt;username&gt; &lt;message&gt; :</b> whisper a message to a specific user.
                            </li>
                            <li>
                                <b>/nick &lt;username&gt; :</b> change your room username.
                            </li>
                            <li>
                                <b>/gif &lt;keywork(s)&gt; or &lt;url&gt; :</b> will browse online a gif related to the keyword(s) provided or will display from a direct url.
                            </li>
                            <li>
                                <b>/gifs &lt;keywork(s)&gt; :</b> will browse online several gifs and let you chose between them.
                            </li>
                            <li>
                                <b>/meme : </b> Will display a meme builder.
                            </li>
                            <li>
                                <b>/clear : </b> Clear the chat messages.
                            </li>
                            <li>
                                <b>!&lt;keywork(s)&gt;! : </b> will insert a sticker related to the keyword you provided.
                            </li>

                        </ul>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading text-center" role="tab" id="headingOne">
                    <h3 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            Plugin(s)
                        </a>
                    </h3>
                </div>
                <div id="collapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body">
                        <ul style="list-style-type: none;padding: 10px;">
                            <li>
                                Active Bots:
                            </li>
                            <li>
                                <hr />
                            </li>
                            <li>
                                some bot
                            </li>
                            <li>
                                some bot
                            </li>
                        </ul>
                        <ul style="list-style-type: none;padding: 10px;">
                            <li>
                                Active Plugins:
                            </li>
                            <li>
                                <hr />
                            </li>
                            <li>
                                some plugin
                            </li>
                            <li>
                                some plugin
                            </li>
                            <li>
                                some plugin
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
       
    </div>
</div>
<div class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div id="modalContent" class="modal-content">
 
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/chat")
@section styles{
    <link rel="Stylesheet" href="@Href("~/Content/ChatThemes/StyleSheet2.css")" />
<link rel="Stylesheet" href="@Href("~/Content/BotQuote/QuoteStyleDefault.css")" />
}
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.3.2/react.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.3.2/react-dom.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/remarkable/1.7.1/remarkable.min.js"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script src="@Url.Content("~/Scripts/Components/chatMessage.jsx")">
    </script>
    <script>
       
        var chat = null;
        $(function () {

            //Auto click Send
            $("#message").keyup(function (event) {
                if (event.keyCode == 13) {
                    $("#sendmessage").click();
                }
            });

            // Reference the auto-generated proxy for the hub.
            chat = $.connection.chatHub;

            //Test pure html appending
            chat.client.addHtmlToPage = function (html) {
                $('#discussion').append(html);
            }

            chat.client.useReactToRenderMessage = function (data) {      
                ReactDOM.render(
                    React.createElement(CommentBox, { data: data }, null),
                    document.getElementById('messageList')
                );

            }

            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {

                if (document.visibilityState != "visible") {

                    flashTitle("New Message from " + htmlEncode(name));

                    if ($("#newMessageNotif").length == 0)
                    $('#discussion').append('<li id="newMessageNotif" class="hr">New</li>'); 
                }
                
                // Add the message to the page.
               
                
                $('#discussion').append('<li style="display:flex;"><div id="senderThumb"><strong>' + htmlEncode(name)
                    + '</strong></div> &nbsp;:  &nbsp;<div id="messageBody" class="bubble">' + message + '</div></li>');              
                
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {                    

                    $("#newMessageNotif").remove();
                    cancelFlashTitle();

                    if ($('#message').val().length > 0) {
                        // parse and execute client side commands if any
                        if (executeCommands($('#message').val())) {
                            $('#message').val('').focus();
                            return;
                        }
                        // Call the Send method on the hub.
                        chat.server.send($('#displayname').val(), $('#message').val());
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                    }
                 
                });
            });
        });
        
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
        var fullscreen = false;
        function toggleFullScreen() {
            if(!fullscreen){
                fullscreen = true;                
                $("#commandPanel").hide();
                $("#chatPanel").removeClass("col-lg-7");
                if (roomHidden)
                    $("#chatPanel").addClass("col-lg-12");
                else
                    $("#chatPanel").addClass("col-lg-10");
                $("#screenIcon").removeClass("glyphicon-resize-small");
                $("#screenIcon").addClass("glyphicon-resize-full");
            } else {
                fullscreen = false;
                if (roomHidden)
                    $("#chatPanel").removeClass("col-lg-12");
                else
                    $("#chatPanel").removeClass("col-lg-10");
                $("#chatPanel").addClass("col-lg-7");
               
                $("#screenIcon").removeClass("glyphicon-resize-small");
                $("#screenIcon").addClass("glyphicon-resize-full");
                $("#commandPanel").show();
            }
        }
        var roomHidden;
        function toggleRoom() {
            if (!roomHidden) {
                $("#roomPanel").hide();
                $("#screenIcon").removeClass("glyphicon-chevron-left");
                $("#screenIcon").addClass("glyphicon-chevron-right");
                roomHidden = true;
                
;               

            } else {
                $("#roomPanel").show();
                $("#screenIcon").removeClass("glyphicon-chevron-right");
                $("#screenIcon").addClass("glyphicon-chevron-left");
                roomHidden = false;
                
               
            }
        }

        (function () {

            var original = document.title;
            var timeout;

            window.flashTitle = function (newMsg, howManyTimes) {
                function step() {
                    document.title = (document.title == original) ? newMsg : original;

                    if (--howManyTimes > 0) {
                        timeout = setTimeout(step, 1000);
                    };
                };

                howManyTimes = parseInt(howManyTimes);

                if (isNaN(howManyTimes)) {
                    howManyTimes = 5;
                };

                cancelFlashTitle(timeout);
                step();
            };

            window.cancelFlashTitle = function () {
                clearTimeout(timeout);
                document.title = original;
            };

        }());

    </script>
}